"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_pages_play_tsx",{

/***/ "./src/utils/user-actions/touchEvents.ts":
/*!***********************************************!*\
  !*** ./src/utils/user-actions/touchEvents.ts ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTouchHandlers: function() { return /* binding */ useTouchHandlers; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/index */ \"./src/store/index.ts\");\n/* harmony import */ var _store_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/hooks */ \"./src/store/hooks.ts\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/debounce */ \"./node_modules/lodash/debounce.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction useTouchHandlers(setSquareState, isBeingDragged, initialSquare, draggedOverSquare, glowingElements, playedSoundForElement) {\n    // redux state extraction \n    const squareBeingDragged = (0,_store_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)((state)=>state.candyCrush.squareBeingDragged);\n    const squareBeingDraggedOver = (0,_store_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)((state)=>state.candyCrush.squareBeingDraggedOver);\n    const dispatch = (0,_store_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppDispatch)();\n    const handleTouchStart = (e)=>{\n        setSquareState((prevState)=>({\n                ...prevState,\n                isBeingDragged: true\n            }));\n        const touch = e.changedTouches[0]; // Get the first touch point\n        const target = document.elementFromPoint(touch.clientX, touch.clientY); // Get the element under the touch\n        if (target instanceof HTMLImageElement) {\n            const candyId = parseInt(target.getAttribute(\"candy-id\") || \"0\", 10);\n            target.style.boxShadow = \"0 0 10px #00ffff, 0 0 20px #00ffff, 0 0 30px #00ffff, 0 0 40px #00ffff\";\n            target.style.transform = \"scale(1.3)\"; // Grow the size by 10%\n            setSquareState((prevState)=>({\n                    ...prevState,\n                    initialSquare: candyId\n                })) // reset initial square\n            ;\n            dispatch((0,_store_index__WEBPACK_IMPORTED_MODULE_1__.dragStart)(target));\n        }\n    };\n    const handleDebouncedTouchMove = lodash_debounce__WEBPACK_IMPORTED_MODULE_3___default()((e)=>{\n    //  touch move handling logic goes here\n    }, 100); // Adjust the debounce delay as needed\n    let lastTouchX = 0;\n    let lastTouchY = 0;\n    let lastTouchTime = 0;\n    const threshold = 1.5; // Adjust as needed based on testing and user feedback\n    const handleTouchMove = (e)=>{\n        handleDebouncedTouchMove(e); // Invoke the debounced touch move handler\n        const touch = e.changedTouches[0]; // Get the first touch point\n        const target = document.elementFromPoint(touch.clientX, touch.clientY); // Get the element under the touch\n        const touchX = touch.clientX;\n        const touchY = touch.clientY;\n        const currentTime = Date.now();\n        const timeDiff = currentTime - lastTouchTime;\n        const distanceX = Math.abs(touchX - lastTouchX);\n        const distanceY = Math.abs(touchY - lastTouchY);\n        const isFastDrag = timeDiff > 0 && (distanceX / timeDiff > threshold || distanceY / timeDiff > threshold);\n        // If the drag is fast, clear the box-shadow of all candy images\n        if (isFastDrag) {\n            const candyImages = document.querySelectorAll(\"img[candy-id]\");\n            // Type assertion to inform TypeScript that 'candyImages' is a NodeList of HTMLImageElement\n            candyImages.forEach((img)=>{\n                if (img instanceof HTMLImageElement && img !== squareBeingDragged) {\n                    img.style.boxShadow = \"\";\n                }\n            });\n        }\n        lastTouchX = touchX;\n        lastTouchY = touchY;\n        lastTouchTime = currentTime;\n        if (target instanceof HTMLImageElement) {\n            const candyId = parseInt(target.getAttribute(\"candy-id\") || \"0\", 10);\n            const squareBeingDraggedInitialPosition = squareBeingDragged.getAttribute(\"candy-id\");\n            const positionX = squareBeingDraggedOver === null || squareBeingDraggedOver === void 0 ? void 0 : squareBeingDraggedOver.positionX;\n            const positionY = squareBeingDraggedOver === null || squareBeingDraggedOver === void 0 ? void 0 : squareBeingDraggedOver.positionY;\n            const squareBeingDraggedOverPosition = positionY * 8 + positionX;\n            // Apply glow effect only to the dragged image\n            // Check for adjacency in all directions (including diagonals)\n            // Check for adjacency in all directions (including diagonals)\n            if (Math.abs(squareBeingDraggedInitialPosition - squareBeingDraggedOverPosition) === 1 || // check horizontal adjacency\n            Math.abs(squareBeingDraggedInitialPosition - squareBeingDraggedOverPosition) === 8 || // Check for vertical adjacency\n            Math.abs(squareBeingDraggedInitialPosition - squareBeingDraggedOverPosition) === 7 || // Check for diagonal adjacency (top-left/bottom-right)\n            Math.abs(squareBeingDraggedInitialPosition - squareBeingDraggedOverPosition) === 9 // Check for diagonal adjacency (top-right/bottom-left)\n            ) {\n                if (!glowingElements.some((element)=>parseInt(element.getAttribute(\"candy-id\") || \"0\", 10) === candyId)) {\n                    // Add the target element only if its candy-id doesn't exist in the array\n                    if (target !== squareBeingDragged) {\n                        setSquareState((prevState)=>({\n                                ...prevState,\n                                glowingElements: [\n                                    ...prevState.glowingElements,\n                                    target\n                                ]\n                            }));\n                    // setGlowingElements((prevElements) => [...prevElements, target]);\n                    }\n                }\n                if (glowingElements.length > 1) {\n                    if (squareBeingDraggedOverPosition !== squareBeingDraggedInitialPosition) {\n                        const updatedElements = glowingElements.slice(1); // Remove the first element\n                        glowingElements[0].style.boxShadow = \"\"; // Remove glow effect from the last element\n                        setSquareState((prevState)=>({\n                                ...prevState,\n                                glowingElements: updatedElements\n                            }));\n                    }\n                }\n                if (squareBeingDraggedOverPosition !== squareBeingDraggedInitialPosition && target !== squareBeingDragged) {\n                    target.style.boxShadow = isBeingDragged ? \"0 0 10px #ffffe0, 0 0 20px #ffffe0, 0 0 30px #ffffe0, 0 0 40px #ffffe0\" : \"\"; // Apply glow effect\n                } else {\n                    target.style.boxShadow = \"\";\n                }\n                if (!isBeingDragged) {\n                    target.style.boxShadow = \"\";\n                }\n                if (target === squareBeingDragged) {\n                    if (glowingElements[0]) {\n                        glowingElements[0].style.boxShadow = \"\";\n                    }\n                }\n            } else if (candyId !== initialSquare) {\n                target.style.boxShadow = \"\"; // Remove glow effect if not adjacent\n                target.style.transform = \"\"; // Reset size\n            } else {\n                target.style.boxShadow = \"0 0 10px #00ffff, 0 0 20px #00ffff, 0 0 30px #00ffff, 0 0 40px #00ffff\";\n            }\n            dispatch((0,_store_index__WEBPACK_IMPORTED_MODULE_1__.dragOver)({\n                positionX: candyId % 8,\n                positionY: Math.floor(candyId / 8)\n            }));\n            setSquareState((prevState)=>({\n                    ...prevState,\n                    draggedOverSquare: target\n                }));\n        }\n    };\n    const handleTouchEnd = (e)=>{\n        e.preventDefault(); // Prevent default touch behavior\n        const touch = e.changedTouches[0]; // Get the first touch point\n        const target = document.elementFromPoint(touch.clientX, touch.clientY); // Get the element under the touch\n        if (target instanceof HTMLImageElement) {\n            target.style.boxShadow = \"\"; // Remove the box shadow\n            target.style.transform = \"\"; // Grow the size by 10%    console.log('it works', isBeingDragged)\n            const touchTarget = document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n            if (touchTarget) {\n                target.style.boxShadow = \"\"; // Remove the box shadow\n                target.style.transform = \"\"; // Grow the size by 10%    console.log('it works', isBeingDragged)      dispatch(dragDrop(touchTarget));\n                dispatch((0,_store_index__WEBPACK_IMPORTED_MODULE_1__.dragDrop)(touchTarget));\n                setSquareState((prevState)=>({\n                        ...prevState,\n                        isBeingDragged: false\n                    }));\n            }\n            squareBeingDragged.style.boxShadow = \"\";\n            squareBeingDragged.style.transform = \"\";\n            glowingElements[0].style.boxShadow = \"\"; // Remove the box shadow\n            glowingElements[0].style.transform = \"\"; // Grow the size by 10%\n            dispatch((0,_store_index__WEBPACK_IMPORTED_MODULE_1__.dragEnd)());\n            setSquareState((prevState)=>({\n                    ...prevState,\n                    isBeingDragged: false\n                }));\n        }\n    };\n    const handlePointerLeave = (e)=>{\n        e.preventDefault(); // Prevent default touch behavior\n        const target = e.target;\n        target.style.boxShadow = \"\"; // Remove the box shadow\n        target.style.transform = \"\"; // Grow the size by 10%    console.log('it works', isBeingDragged)      dispatch(dragDrop(touchTarget));\n        if (glowingElements[0]) {\n            glowingElements[0].style.boxShadow = \"\"; // Remove the box shadow\n            glowingElements[0].style.transform = \"\"; // Grow the size by 10%\n        }\n        dispatch((0,_store_index__WEBPACK_IMPORTED_MODULE_1__.dragEnd)());\n        setSquareState((prevState)=>({\n                ...prevState,\n                isBeingDragged: false\n            }));\n    };\n    return {\n        handleTouchStart,\n        handleTouchMove,\n        handleTouchEnd,\n        handlePointerLeave\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/user-actions/touchEvents.ts\n"));

/***/ })

});